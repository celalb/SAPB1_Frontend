!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/common"),require("@angular/forms"),require("@angular/core")):"function"==typeof define&&define.amd?define("grid",["exports","@angular/common","@angular/forms","@angular/core"],e):e(t.grid={},t.ng.common,t.ng.forms,t.ng.core)}(this,function(t,e,o,n){"use strict";var r=function(){function t(){}return t.prototype.transform=function(t,e,o,n){return t?e&&n?(n=n.toLocaleLowerCase(),t=t[o]?t.filter(function(t){return-1!==t[e].toLocaleLowerCase().indexOf(n)}):t):t:[]},t.decorators=[{type:n.Pipe,args:[{name:"GridFilter"}]}],t}(),i=function(){function t(){this.datas=[]}return t.prototype.OnLoadData=function(t,e,o,n){this.columns=e,this.addopt=o,this.delopt=n,t&&0!==t.length?this.datas=t:(this.datas=new Array,this.datas=this.addRows(5))},t.prototype.addRows=function(t){for(var e="",o="",n=[],r=0;r<t;r++){for(var i=0;i<this.columns.length;i++)e+=this.columns[i].code+":";o=",",r==t&&(o=""),this.data="{"+e+"}",n.push(this.data+o)}return n},t.prototype.GetColumns=function(){return this.columns},t.prototype.GetData=function(){return this.datas},t.prototype.GetDelopt=function(){return this.delopt},t.prototype.GetAddopt=function(){return this.addopt},t.prototype.getActivedata=function(){return this.data},t.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[]},t.ngInjectableDef=n.defineInjectable({factory:function(){return new t},token:t,providedIn:"root"}),t}(),c=function(){function t(t){this.gridservice=t,this.sortType="Priorty",this.filter=!1,this.sortmode=!1,this.editcol=""}return t.prototype.ngOnInit=function(){var e=this;this.columns=this.gridservice.GetColumns(),this.datas=this.gridservice.GetData(),this.delopt=this.gridservice.GetDelopt(),this.addopt=this.gridservice.GetAddopt(),this.search=new Array,this.sortDirection=new Array,this.columns.forEach(function(t){e.search.push(),e.sortDirection.push(!1)})},t.prototype.remove=function(t){console.log("remove Id="+t),this.datas.splice(t,1)},t.prototype.add=function(){this.datas.push(this.gridservice.addRows(1))},t.prototype.seltemplate=function(t,e,o,n){if(this.editcol===e+o&&t){this.rowix=o,this.colIdx=n,this.inpid=o+"-"+n,this.prop=e;var r=document.getElementById(this.inpid);return r&&(this.sortmode=!1,r.focus()),!0}return!1},t.prototype.validateOnlyNumbers=function(t,e){var o=t||window.event,n=o.keyCode||o.which;n=String.fromCharCode(n);/[0-9]|\./.test(n)||"numeric"!==e&&"currency"!==e||(o.returnValue=!1,o.preventDefault&&o.preventDefault())},t.prototype.shiftFocusDown=function(t,e,o){var n=o+(t=Math.min(t+1,this.datas.length-1));this.editcol=n,this.inpid=t+"-"+e},t.prototype.shiftFocusUp=function(t,e,o){var n=o+(t=Math.max(0,t-1));this.editcol=n,this.inpid=t+"-"+e},t.prototype.shiftFocusLeft=function(t,e,o){e=e-1-this.columns.slice(0,e).reverse().findIndex(function(t){return t.editable});var n=this.columns[e].code+t;this.editcol=n,this.inpid=t+"-"+e},t.prototype.shiftFocusRight=function(t,e,o){var n=e+1+this.columns.slice(e+1).findIndex(function(t){return t.editable});console.log("****",n,e),n==e&&(n=0,t=Math.min(t+1,this.datas.length-1));var r=this.columns[n].code+t;this.editcol=r,this.inpid=t+"-"+e},t.prototype.seteditmode=function(t,e,o,n){var r=o+t;this.editcol=r,this.inpid=t+"-"+e,this.gridservice.data=n},t.decorators=[{type:n.Component,args:[{selector:"app-grid",template:'<table id="table" class="table-hover" bordercolor="black" width=100%>\n\n  <thead>\n\n    <tr class="trhead table-success">\n      <th *ngFor="let col of columns;let clIx=index">\n        <ng-container *ngIf="col.searchable   ;then srchBlck;\n                else noBlckpr">\n        </ng-container>\n        <ng-template #srchBlck>{{col.display}}\n          <input type="text" class="inputcss" placeholder="Search" [(ngModel)]="search[clIx]"\n            (click)="colix=clIx; filtercode=col.code;editcol=\'\'">\n        </ng-template>\n        <ng-template #noBlckpr>\n        </ng-template>\n\n      </th>\n      <th *ngIf="addopt || delopt"> </th>\n    </tr>\n    <tr *ngIf="columns">\n      <th *ngFor="let col of columns;let cix=index" id="col.display" class="pointer">\n        <a (click)="sortmode=true;sortType = col.code; sortDirection[cix] = !sortDirection[cix];colix=cix">\n          {{col.display}}\n          <span *ngIf="sortType == col.code && sortDirection[cix]" class="fa fa-caret-down"></span>\n          <span *ngIf="sortType == col.code && !sortDirection[cix]" class="fa fa-caret-up"></span>\n        </a>\n      </th>\n      <th *ngIf="addopt || delopt">\n          <div *ngIf="addopt; else elseBlock">\n              <button type="button" style="color:Green" (click)="add()">\n                  <i class=" buttonadd fa fa-plus-square-o"></i>Add</button>\n          </div>\n            <ng-template #elseBlock>\n                   <a></a>\n            </ng-template>    \n        </th>\n    </tr>\n\n  </thead>\n\n  <tr *ngFor="let data of datas|GridFilter:filtercode:colix:search[colix]\n      |orderBy:sortType:sortDirection[colix]:sortmode ;\n                let ix = index;\n                ">\n    <td id="td" *ngFor="let col of columns; let colIdx = index" (click)="seteditmode(ix,colIdx,col.code,data)"\n      [ngClass]="{\'number\': col.type===\'numeric\' || col.type===\'currency\',\'tdcss\':col.type===\'text\'}">\n\n      <ng-container *ngIf="seltemplate(col.editable,col.code,ix,colIdx) ;then editBlckpr;\n        else showBlckpr">\n      </ng-container>\n      <ng-template #showBlckpr>\n        <ng-template [ngIf]="col.type===\'currency\'">\n          <a\n            [ngStyle]="{\'color\': data[col.code] < 0? col.minuscolor:col.color}">{{data[col.code] | currency:col.pipe}}</a>\n        </ng-template>\n        <ng-template [ngIf]="col.type===\'numeric\' ">\n          <a\n            [ngStyle]="{\'color\': data[col.code] < 0? col.minuscolor:col.color}">{{data[col.code] | number:col.format }}</a>\n        </ng-template>\n        <ng-template [ngIf]="col.type===\'text\' || col.type===\'\'  || col.type===undefined">\n          <a>{{data[col.code] }}</a>\n        </ng-template>\n        <ng-template [ngIf]="col.type===\'date\'">\n          <a>{{data[col.code] | date:col.format}}</a>\n        </ng-template>\n\n\n      </ng-template>\n\n      <ng-template #editBlckpr>\n        <input id={{inpid}} matInput autofocus [(ngModel)]="data[col.code]" class="inputcss"\n          (keypress)="validateOnlyNumbers($event,col.type)" (keydown.Tab)="shiftFocusRight(ix, colIdx,col.code)"\n          (keydown.enter)="shiftFocusRight(ix, colIdx,col.code)"\n          (keydown.arrowdown)="shiftFocusDown(ix ,colIdx,col.code)"\n          (keydown.arrowup)="shiftFocusUp(ix, colIdx,col.code)"\n          (keydown.shift.Tab)="shiftFocusLeft(ix, colIdx,col.code)" />\n\n      </ng-template>\n    </td>\n    <td *ngIf="addopt || delopt" id="rm"   class="tdcss">\n        <div *ngIf="delopt; else empBlock">\n            <button type="button" style="color:red"  (click)="remove(ix)">\n                <i class="glyphicon glyphicon-trash"></i>Del</button>\n        </div>\n          <ng-template #empBlock>\n                 <a></a>\n          </ng-template>  \n \n     \n\n    </td>\n  </tr>\n  </tbody>\n\n</table>',providers:[r],styles:["@import url(https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css);#table tr{display:flex;flex-direction:row;flex-wrap:wrap;flex-basis:100%;border:.5px solid rgba(3,3,3,.2)}#table td,#table th{flex:1 1 80px;border:1px solid #ddd;padding:1px;position:relative;line-height:auto!important}#table tr:nth-child(even){background-color:#f2f2f2}#table tr:hover{background-color:#ddd}#table th{padding-top:1px;padding-bottom:1px;text-align:left;background-color:rgba(89,151,151,.965);color:#070303}.pointer{cursor:pointer}.inputcss{position:absolute;top:0;background-color:#e8eeeef6;height:100%;width:100%;padding:1px;display:flex;flex:1 0 90%;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box}.tdcss{position:relative;line-height:auto!important}.number{text-align:right;padding:0 1px}.icon{background:url(../cross-min.png);height:10px;width:20px}.button{background-color:#b10707;border:none;color:#fff;padding:4px 8px;text-align:center;text-decoration:none;display:inline-block;font-size:8px;margin:4px 2px;cursor:pointer;left:20px;position:relative}.buttonadd{cursor:pointer}.positive{background-color:green}.negative{background-color:#ff0;color:red}"]}]}],t.ctorParameters=function(){return[{type:i}]},t}(),a=function(){function t(){}return t.prototype.transform=function(t,o,e,n){if(!n)return t;if(!t)return[];if(!o)return t;if(n=!1,0<t.length){var r=!1===e?-1:1,i=Array.isArray(t),c=typeof t[0],a=!(!i||"object"!==c)||(!i||"object"===c);t.sort(function(t,e){return t=a?t[o]:t,e=a?e[o]:e,"string"==typeof t?e<t?-1*r:1*r:"number"==typeof t?0<t-e?-1*r:1*r:void 0})}return t},t.decorators=[{type:n.Pipe,args:[{name:"orderBy",pure:!1}]}],t}(),s=function(){function t(){}return t.decorators=[{type:n.NgModule,args:[{declarations:[c,r,a],imports:[e.CommonModule,o.FormsModule],exports:[c]}]}],t}(),l=function d(){};t.GridModule=s,t.GridComponent=c,t.Column=l,t.GridService=i,t.ɵa=r,t.ɵb=a,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=grid.umd.min.js.map