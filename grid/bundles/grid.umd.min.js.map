{"version":3,"sources":["ng://grid/lib/grid/filter.pipe.ts","ng://grid/lib/grid/grid.service.ts","ng://grid/lib/grid/grid.component.ts","ng://grid/lib/grid/order.pipe.ts","ng://grid/lib/grid.module.ts","ng://grid/lib/grid/column.ts"],"names":["FilterPipe","prototype","transform","datas","fldname","colIdx","search","toLocaleLowerCase","filter","p","indexOf","Pipe","args","name","GridService","this","OnLoadData","col","addopt","delopt","columns","length","Array","addRows","lrow","vrbl","vrg","xdatas","lx","i","code","data","push","GetColumns","GetData","GetDelopt","GetAddopt","getActivedata","Injectable","providedIn","GridComponent","gridservice","sortType","sortmode","editcol","ngOnInit","_this","sortDirection","forEach","element","remove","id","console","log","splice","add","seltemplate","editable","prop","ix","rowix","inpid","document","getElementById","focus","validateOnlyNumbers","evt","type","theEvent","window","event","key","keyCode","which","String","fromCharCode","test","returnValue","preventDefault","shiftFocusDown","rowIdx","property","Math","min","shiftFocusUp","max","shiftFocusLeft","slice","reverse","findIndex","c","shiftFocusRight","colIx","seteditmode","Component","selector","template","providers","OrderPipe","value","direcion","_direction_1","_isArr","isArray","_type","_flag_1","sort","a","b","pure","GridModule","NgModule","declarations","imports","CommonModule","FormsModule","exports","Column"],"mappings":"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","sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from './column';\n\n@Pipe({\n    name: 'GridFilter'\n  })\n  export class FilterPipe implements PipeTransform {\n  \n    transform(datas: any[], fldname?: string, colIdx?: number, search?: string): any[] {\n  \n      if (!datas) return [];\n      if (!fldname) return datas;\n      if (!search) return datas;\n      \n      search = search.toLocaleLowerCase() ;\n     \n      datas = datas[colIdx] ? datas.filter(\n        (p: any) =>\n          p[fldname].toLocaleLowerCase().indexOf(search) !== -1)\n        : datas\n      return datas;\n    }\n  }","import { Column } from './column';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class GridService {\n  columns: Column[];\n  data: any;\n  addopt: boolean;\n  delopt: boolean;\n  public datas: any[] = [];\n  constructor() { }\n  OnLoadData(datas?: any[], col?: Column[],addopt?: boolean, delopt?: boolean) {\n    this.columns = col;\n    this.addopt = addopt;\n    this.delopt = delopt;\n    if (!datas || datas.length === 0){\n      this.datas = new Array();\n      this.datas = this.addRows(5);\n    } else {\n      this.datas = datas;\n    }\n  }\n  addRows(lrow: Number): any[] {\n    let vrbl = \"\";\n    let vrg = \"\";\n    let xdatas: any[] = [];\n    for (let lx = 0; lx < lrow; lx++) {\n\n      for (let i = 0; i < this.columns.length; i++) {\n        vrbl += this.columns[i].code + \":\" + '';\n      }\n      vrg = ',';\n      if (lx == lrow) {\n        vrg = '';\n      }\n\n      this.data = \"{\" + vrbl + \"}\";\n      xdatas.push(this.data + vrg)\n    }\n    return xdatas;\n\n  }\n  GetColumns(): Column[] {\n    return this.columns;\n  }\n  GetData(): any[] {\n    return this.datas;\n  }\n  GetDelopt(): boolean {\n    return this.delopt;\n  }\n  GetAddopt(): boolean {\n    return this.addopt;\n  }\n  getActivedata():any{\n    return this.data;\n}\n\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\n\nimport { Column } from './column';\nimport { FilterPipe } from './filter.pipe';\nimport { GridService } from './grid.service';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.css'],\n  providers: [FilterPipe]\n})\nexport class GridComponent implements OnInit {\n  public columns: Column[];\n  search: string[];\n  gridid ;\n  data: any;\n  public datas: any[];\n  delopt : boolean;\n  addopt : boolean;\n  sortType = 'Priorty';\n  sortDirection: boolean[];\n  editmode: boolean;\n  editcol: string;\n\n  filtercode: string;\n  filter = false;\n  colix: number;\n  colIdx: number;\n  rowix: number;\n  prop: string;\n  inpid: string;\n  sortmode = false;\n  constructor(private gridservice: GridService) {\n    this.editcol = '';\n  }\n\n  ngOnInit() {\n   \n    this.columns = this.gridservice.GetColumns();\n    this.datas = this.gridservice.GetData();\n    this.delopt = this.gridservice.GetDelopt();\n    this.addopt = this.gridservice.GetAddopt();\n    this.search = new Array();\n    this.sortDirection = new Array();\n\n    this.columns.forEach(element => {\n      this.search.push();\n      this.sortDirection.push(\n        false\n      );\n    });\n\n  }\n  \n  remove(id: number) {\n    console.log(\"remove Id=\"+id);\n    this.datas.splice(id, 1);\n\n    return;\n  }\n  add() {\n    \n    this.datas.push(this.gridservice.addRows(1));\n\n  }\n  seltemplate(editable?: boolean, prop?, ix?, colIdx?) {\n   \n    if (this.editcol === prop + ix && editable) {\n      this.rowix = ix;\n      this.colIdx = colIdx;\n      this.inpid = ix + '-' + colIdx;\n      this.prop = prop;\n      let element: HTMLElement = document.getElementById(this.inpid) as HTMLElement;\n      if (element) {\n        this.sortmode=false;\n        element.focus();\n      }\n      //this.datas.filter(x => x.code === prop).map(x => x[prop]);\n      return true;\n    }\n    return false;\n\n  }\n  \n  validateOnlyNumbers(evt,type) {\n    var theEvent = evt || window.event;\n    var key = theEvent.keyCode || theEvent.which;\n    key = String.fromCharCode( key );\n    var regex = /[0-9]|\\./;\n    if( !regex.test(key) && (type === 'numeric' || type === 'currency'  )) {\n      theEvent.returnValue = false;\n      if(theEvent.preventDefault) theEvent.preventDefault();\n    }\n  }\n  /*\n  @HostListener('document:keydown', ['$event'])\n      onKeyDown(ev: KeyboardEvent) {\n    \n   \n    let elkey: HTMLElement = ev.srcElement as HTMLElement;\n    \n    if (ev.key === \"Enter\" || (ev.key === \"Tab\" && !ev.shiftKey)) {\n      this.shiftFocusRight(this.rowix, this.colIdx, this.prop);\n\n    } else\n      if (ev.key === \"Tab\" && ev.shiftKey) {\n        this.shiftFocusLeft(this.rowix, this.colIdx, this.prop);\n\n      } else\n        if (ev.key === \"ArrowUp\") {\n          this.shiftFocusUp(this.rowix, this.colIdx, this.prop);\n\n        } else\n          if (ev.key === \"ArrowDown\") {\n            this.shiftFocusDown(this.rowix, this.colIdx, this.prop);\n\n          } \n         \n    let element: HTMLElement = document.getElementById(this.editcol) as HTMLElement;\n    if (element) {\n      element.focus();\n    }\n\n  }\n\n  @HostListener('document:keyup', ['$event'])\n  onKeyUp(ev:KeyboardEvent) {\n    \n    let element: HTMLElement = ev.srcElement as HTMLElement;\n    console.log(element.id, element.nodeName,element.nodeType,element.id);\n    if (element) {\n      \n      element.focus();\n    }\n  \n   \n\n  }\n*/\n  \n  shiftFocusDown(rowIdx: number, colIdx: number, property: string) {\n    rowIdx = Math.min(rowIdx + 1, this.datas.length - 1);\n    const name = property + rowIdx;\n    this.editcol = name;\n    this.inpid = rowIdx + '-' + colIdx;\n  }\n  shiftFocusUp(rowIdx: number, colIdx: number, property: string) {\n    rowIdx = Math.max(0, rowIdx - 1);\n    const name = property + rowIdx;\n    this.editcol = name;\n    this.inpid = rowIdx + '-' + colIdx;\n  }\n\n  shiftFocusLeft(rowIdx: number, colIdx: number, property: string) {\n\n\n\n    // left one column, and correct for non editable columns to left\n    colIdx = colIdx - 1 - this.columns.slice(0, colIdx).reverse().findIndex(c => c.editable);\n    // don't need edge check bc findIndex returns -1 if none found or no items, so that corrects us back to start col automatically\n    const name = this.columns[colIdx].code + rowIdx;\n    this.editcol = name;\n    this.inpid = rowIdx + '-' + colIdx;\n  }\n\n  shiftFocusRight(rowIdx: number, colIdx: number, property: string) {\n\n    // right one column, and correct for non editable columns to right\n    let colIx = colIdx + 1 + this.columns.slice(colIdx + 1).findIndex(c => c.editable);\n    console.log(\"****\",colIx,colIdx);\n    if (colIx == colIdx) {\n      colIx = 0;\n      rowIdx = Math.min(rowIdx + 1, this.datas.length - 1);\n    }\n    \n    const name = this.columns[colIx].code + rowIdx;\n    this.editcol = name;\n    this.inpid = rowIdx + '-' + colIdx;\n   \n  }\n\n  seteditmode( id: number, colIdx: number, property: string, data) {\n\n      const name = property + id;\n      this.editcol = name;\n      this.inpid = id + '-' + colIdx;\n      \n      this.gridservice.data = data;\n  }\n \n}","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { Column } from './column';\n\n@Pipe({\n  name: 'orderBy',\n  pure: false\n})\nexport class OrderPipe implements PipeTransform {\n\n\n  transform(value:Array<any>, prop?: string, direcion?,sortmode?:boolean): any { \n    if (!sortmode){\n      return value;\n    }\n    if (!value) { \n      return [];  \n    }  \n    if ( !prop) {  \n      return value  \n    }  \n    sortmode = false;\n    if (value.length > 0) {  \n     \n      const _direction = direcion === false ? -1 : 1,      \n        _isArr = Array.isArray(value),  \n        _type = typeof value[0],  \n        _flag = _isArr && _type === 'object' ? true : _isArr && _type !== 'object' ? false : true;  \n     \n      value.sort((a, b) => {  \n        a = _flag ? a[prop] : a;  \n        b = _flag ? b[prop] : b;  \n     \n        if (typeof a === 'string') {  \n          return a > b ? -1 * _direction : 1 * _direction;  \n        } else if (typeof a === 'number') {  \n          return a - b > 0 ? -1 * _direction : 1 * _direction;  \n        }  \n      });  \n      \n    }  \n    \n    return value; \n    \n\n  }\n\n}\n","import { Column } from './grid/column';\nimport { CommonModule } from '@angular/common';\nimport { FilterPipe } from './grid/filter.pipe';\nimport { FormsModule } from '@angular/forms';\nimport { GridComponent } from './grid/grid.component';\nimport { NgModule } from '@angular/core';\nimport { OrderPipe } from './grid/order.pipe';\n@NgModule({\n  declarations: [GridComponent, FilterPipe, OrderPipe],\n  imports: [ CommonModule, FormsModule\n  ],\n  exports: [GridComponent]\n})\nexport class GridModule { }\n","export class Column {\n    code: string;\n    display: string;\n    editable: boolean;\n    type: string;\n    color: string;\n    minuscolor: string;\n    sortable: boolean;\n    searchable: boolean;\n    pipe;\n    format:string;\n}"]}