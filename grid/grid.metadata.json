{"__symbolic":"module","version":4,"metadata":{"GridModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":7,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"GridComponent"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":9,"character":13},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":9,"character":27}],"exports":[{"__symbolic":"reference","name":"GridComponent"}]}]}],"members":{}},"GridComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"app-grid","providers":[{"__symbolic":"reference","name":"ɵa"}],"template":"<table id=\"table\" class=\"table-hover\" bordercolor=\"black\" width=100%>\n\n  <thead>\n\n    <tr class=\"trhead table-success\">\n      <th *ngFor=\"let col of columns;let clIx=index\">\n        <ng-container *ngIf=\"col.searchable   ;then srchBlck;\n                else noBlckpr\">\n        </ng-container>\n        <ng-template #srchBlck>{{col.display}}\n          <input type=\"text\" class=\"inputcss\" placeholder=\"Search\" [(ngModel)]=\"search[clIx]\"\n            (click)=\"colix=clIx; filtercode=col.code;editcol=''\">\n        </ng-template>\n        <ng-template #noBlckpr>\n        </ng-template>\n\n      </th>\n      <th *ngIf=\"addopt || delopt\"> </th>\n    </tr>\n    <tr *ngIf=\"columns\">\n      <th *ngFor=\"let col of columns;let cix=index\" id=\"col.display\" class=\"pointer\">\n        <a (click)=\"sortmode=true;sortType = col.code; sortDirection[cix] = !sortDirection[cix];colix=cix\">\n          {{col.display}}\n          <span *ngIf=\"sortType == col.code && sortDirection[cix]\" class=\"fa fa-caret-down\"></span>\n          <span *ngIf=\"sortType == col.code && !sortDirection[cix]\" class=\"fa fa-caret-up\"></span>\n        </a>\n      </th>\n      <th *ngIf=\"addopt || delopt\">\n          <div *ngIf=\"addopt; else elseBlock\">\n              <button type=\"button\" style=\"color:Green\" (click)=\"add()\">\n                  <i class=\" buttonadd fa fa-plus-square-o\"></i>Add</button>\n          </div>\n            <ng-template #elseBlock>\n                   <a></a>\n            </ng-template>    \n        </th>\n    </tr>\n\n  </thead>\n\n  <tr *ngFor=\"let data of datas|GridFilter:filtercode:colix:search[colix]\n      |orderBy:sortType:sortDirection[colix]:sortmode ;\n                let ix = index;\n                \">\n    <td id=\"td\" *ngFor=\"let col of columns; let colIdx = index\" (click)=\"seteditmode(ix,colIdx,col.code,data)\"\n      [ngClass]=\"{'number': col.type==='numeric' || col.type==='currency','tdcss':col.type==='text'}\">\n\n      <ng-container *ngIf=\"seltemplate(col.editable,col.code,ix,colIdx) ;then editBlckpr;\n        else showBlckpr\">\n      </ng-container>\n      <ng-template #showBlckpr>\n        <ng-template [ngIf]=\"col.type==='currency'\">\n          <a\n            [ngStyle]=\"{'color': data[col.code] < 0? col.minuscolor:col.color}\">{{data[col.code] | currency:col.pipe}}</a>\n        </ng-template>\n        <ng-template [ngIf]=\"col.type==='numeric' \">\n          <a\n            [ngStyle]=\"{'color': data[col.code] < 0? col.minuscolor:col.color}\">{{data[col.code] | number:col.format }}</a>\n        </ng-template>\n        <ng-template [ngIf]=\"col.type==='text' || col.type===''  || col.type===undefined\">\n          <a>{{data[col.code] }}</a>\n        </ng-template>\n        <ng-template [ngIf]=\"col.type==='date'\">\n          <a>{{data[col.code] | date:col.format}}</a>\n        </ng-template>\n\n\n      </ng-template>\n\n      <ng-template #editBlckpr>\n        <input id={{inpid}} matInput autofocus [(ngModel)]=\"data[col.code]\" class=\"inputcss\"\n          (keypress)=\"validateOnlyNumbers($event,col.type)\" (keydown.Tab)=\"shiftFocusRight(ix, colIdx,col.code)\"\n          (keydown.enter)=\"shiftFocusRight(ix, colIdx,col.code)\"\n          (keydown.arrowdown)=\"shiftFocusDown(ix ,colIdx,col.code)\"\n          (keydown.arrowup)=\"shiftFocusUp(ix, colIdx,col.code)\"\n          (keydown.shift.Tab)=\"shiftFocusLeft(ix, colIdx,col.code)\" />\n\n      </ng-template>\n    </td>\n    <td *ngIf=\"addopt || delopt\" id=\"rm\"   class=\"tdcss\">\n        <div *ngIf=\"delopt; else empBlock\">\n            <button type=\"button\" style=\"color:red\"  (click)=\"remove(ix)\">\n                <i class=\"glyphicon glyphicon-trash\"></i>Del</button>\n        </div>\n          <ng-template #empBlock>\n                 <a></a>\n          </ng-template>  \n \n     \n\n    </td>\n  </tr>\n  </tbody>\n\n</table>","styles":["@import url(https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css);#table tr{display:flex;flex-direction:row;flex-wrap:wrap;flex-basis:100%;border:.5px solid rgba(3,3,3,.2)}#table td,#table th{flex:1 1 80px;border:1px solid #ddd;padding:1px;position:relative;line-height:auto!important}#table tr:nth-child(even){background-color:#f2f2f2}#table tr:hover{background-color:#ddd}#table th{padding-top:1px;padding-bottom:1px;text-align:left;background-color:rgba(89,151,151,.965);color:#070303}.pointer{cursor:pointer}.inputcss{position:absolute;top:0;background-color:#e8eeeef6;height:100%;width:100%;padding:1px;display:flex;flex:1 0 90%;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box}.tdcss{position:relative;line-height:auto!important}.number{text-align:right;padding:0 1px}.icon{background:url(../cross-min.png);height:10px;width:20px}.button{background-color:#b10707;border:none;color:#fff;padding:4px 8px;text-align:center;text-decoration:none;display:inline-block;font-size:8px;margin:4px 2px;cursor:pointer;left:20px;position:relative}.buttonadd{cursor:pointer}.positive{background-color:green}.negative{background-color:#ff0;color:red}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"GridService"}]}],"ngOnInit":[{"__symbolic":"method"}],"remove":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"}],"seltemplate":[{"__symbolic":"method"}],"validateOnlyNumbers":[{"__symbolic":"method"}],"shiftFocusDown":[{"__symbolic":"method"}],"shiftFocusUp":[{"__symbolic":"method"}],"shiftFocusLeft":[{"__symbolic":"method"}],"shiftFocusRight":[{"__symbolic":"method"}],"seteditmode":[{"__symbolic":"method"}]}},"Column":{"__symbolic":"class","members":{}},"GridService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":3,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"OnLoadData":[{"__symbolic":"method"}],"addRows":[{"__symbolic":"method"}],"GetColumns":[{"__symbolic":"method"}],"GetData":[{"__symbolic":"method"}],"GetDelopt":[{"__symbolic":"method"}],"GetAddopt":[{"__symbolic":"method"}],"getActivedata":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":4,"character":1},"arguments":[{"name":"GridFilter"}]}],"members":{"transform":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":4,"character":1},"arguments":[{"name":"orderBy","pure":false}]}],"members":{"transform":[{"__symbolic":"method"}]}}},"origins":{"GridModule":"./lib/grid.module","GridComponent":"./lib/grid/grid.component","Column":"./lib/grid/column","GridService":"./lib/grid/grid.service","ɵa":"./lib/grid/filter.pipe","ɵb":"./lib/grid/order.pipe"},"importAs":"grid"}